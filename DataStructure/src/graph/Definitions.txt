=> A Graph is a pair(V,E) where V is a set of nodes and E is a collection of pairs
    of vertices.
    Example: V = {a, b, c, d}, E = {(a,b),(b,c),(c,d),(d,a),(a,c)}.
    each pair of vertices is called an 'edge' of the graph.
=> Undirected graph: In this type of graph, the edges are without direction. So edge
    (a,b) and edge (b,a) are same in an undirected graph.
=> Directed graph: In this type of graph, the edges have directions. So edge (a,b) and
    edge (b,a) are not same in a directed graph.
=> A graph with no cycles is called a 'Tree'.
=> A 'Cycle' in a graph is a loop in which the starting and ending vertex is the same.
=> A graph is called connected, if there is a path from every vertex to every other vertex.
=> A tree is an 'acyclic' connected graph.
=> A self loop is an edge that connects a vertex to itself.
=> Two edged are 'Parallel' when they connect the same pair of vertices.
=> The 'Degree' of a vertex is defined as the number of edges incident to it.
=> A subgraph is a subset of a graph.
=> A vertex is called 'connected' to another vertex when there is a path which
    contains both of them.
=> DAG: Directed Acyclic Graph.
=> A forest is a set of disjoint trees.
=> A 'Spanning Tree' of a connected graph is a subgraph that contains all of the
    vertices of the graph and is a single tree.
=> A 'Bipartite graph' is a graph in which we can divide the vertices in two sets
    such that all edges connect a vertex in one set with a vertex in another set.
=> A 'weighted' graph contains the numbers on the edges of it.
=> The number of vertices in a graph is denoted by |V|.
=> The number of edges in a graph is denoted by |E|.
=> |E| can lie between 0 to |V|*(|V|-1)/2.
=> A graph with all the edges present is called 'Complete graph'.

